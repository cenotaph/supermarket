
.small-3.columns.filter_column
  .title= t "aim.filter_by_initiative"
  -#row#initiative_filter{:style => "display: " + (@nofilters.nil? ? 'inline' : 'none')}
  %ul
    - @filters_businesstype.each do |bt|
      -#.small-4.columns
      %li{:class => (session[:filter_scope]['businesstype'].blank? ? false : (session[:filter_scope]['businesstype'].include?(bt.id) ? :activated : false ) rescue false)}
        = link_to bt.name, "/filter_by/businesstype/#{bt.id}"
        - unless bt.spaces.approved.to_a.flatten.delete_if{|x| x.approved == false}.empty?
          = "(#{bt.spaces.approved.flatten.uniq.size})" 
.small-3.columns.filter_column
  .title= t :location
  #tree
    %ul
      - ISO3166::Country::Data.group_by{|x| x.last["region"]}.each do |region|
        - next if region.first.blank?
        - next if @tree[region.first].nil?
        - next if @tree[region.first].flatten.delete_if{|x| x.class == String}.nil?

        %li{:id => region.first, :class => check_filter(region.last.map(&:first), 'country', "jstree-open") }
        
          = link_to region.first + " (#{@tree[region.first].to_enum(:flat_each).collect {|k, v| [k,v] }.flatten.delete_if{|x| x.class == String }.size})", '#'
          %ul
            - region.last.group_by{|x| x.last['subregion'] }.each do |subregion|
              - next if subregion.first.blank?
              - next if @tree[region.first][subregion.first].nil?
              %li{:class => check_filter(subregion.last.map(&:first), 'country', "jstree-open ") }
                = link_to subregion.first + " (#{@tree[region.first][subregion.first].to_enum(:flat_each).collect {|k, v| [k,v] }.flatten.delete_if{|x| x.class == String }.size})", '#'
                %ul
                  - subregion.last.sort_by{|x| x.last['name'] }.each do |country|
                    - next if country.first.blank?
                    - next if @tree[region.first][subregion.first][country.first.downcase].nil?
                    %li{:class => check_filter([country.first], 'country', "jstree-open activated ") }

                      = link_to country.last['name'] + " (#{@tree[region.first][subregion.first][country.first.downcase].size})", "/filter_by/country/#{country.first}"
  %br/
  .title= t "aim.exhibition_space_type"
  %ul
    - Exhibitionspacetype.includes([:translations, :spaces]).all.each do |est|
      %li{:class => (session[:filter_scope]['exhibitionspacetype'].blank? ? false : (session[:filter_scope]['exhibitionspacetype'].include?(est.id) ? :activated : false ) rescue false)}
        = link_to est.name, '/filter_by/exhibitionspacetype/' + est.id.to_s
        - unless est.spaces.to_a.delete_if{|x| x.approved == false}.empty?
          = "(#{est.spaces.size})"
.small-3.columns.filter_column{:style => "border-left: 1px dotted #000;"}
  .title= t :activities
  %ul
    - Activity.all.each do |activity|
      %li{:class => (session[:filter_scope]['activity'].blank? ? false : (session[:filter_scope]['activity'].include?(activity.id) ? :activated : false ) rescue false )}
      
        = link_to activity.name, "/filter_by/activity/#{activity.id}"
        - unless activity.spaces.to_a.delete_if{|x| x.approved == false}.empty?
          = "(#{activity.spaces.size})"

.small-3.columns.filter_column.last                  
  .title= t "aim.organisation_structure"
  %ul
    - @filters_organisationtype.all.each do |ot|
      %li{:class => (session[:filter_scope]['organisationtype'].blank? ? false : (session[:filter_scope]['organisationtype'].include?(ot.id) ? :activated : false ) rescue false)}
        = link_to ot.name, "/filter_by/organisationtype/#{ot.id}"
        - unless ot.spaces.to_a.delete_if{|x| x.approved == false}.empty?
          = "(#{ot.spaces.size})"